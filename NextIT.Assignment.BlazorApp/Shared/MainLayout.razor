@inherits LayoutComponentBase

@inject IUserService UserService

<div class="page">
    @if (_signedIn)
    {
        <div class="sidebar">
            <NavMenu/>
        </div>
    }
    <div class="main">
        <div class="top-row px-4">
            <a href="https://docs.microsoft.com/aspnet/" target="_blank">About</a>
            @if (_signedIn)
            {
                <a class="ml-4" href="" @onclick="SignOut">Sign out</a>
            }
        </div>

        <div class="content px-4">
            @if (!_signedIn)
            {
                <EditForm Model="_user" OnValidSubmit="SignIn">
                    <DataAnnotationsValidator/>
                    <ValidationSummary/>
                    <h3>Sign in:</h3>

                    <div class="d-flex flex-column justify-content-around px-5">
                        <div class="form-group">
                            <label for="username">Username:</label>
                            <InputText class="form-control" id="username" @bind-Value="_user.Username"/>
                        </div>
                        <div class="form-group">
                            <label for="password">Password:</label>
                            <input type="password" class="form-control" id="password" @bind-value="_user.Password"/>
                        </div>
                    </div>
                    <button class="btn btn-primary align-content-center" type="submit">Sign in</button>
                </EditForm>
            }
            else
            {
                @Body
            }
        </div>
    </div>
</div>

@code {
    private bool _signedIn;
    private User _user;

    protected async override Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        ResetUser();
        _signedIn = await UserService.GetSignState();
    }

    private void ResetUser()
    {
        _user = new User();
    }


    private async Task SignIn()
    {
        _signedIn = await UserService.SignInTask(_user);
        ResetUser();
    }

    private async Task SignOut()
    {
        await UserService.SignOutAsync();
        _signedIn = await UserService.GetSignState();
        ResetUser();
    }

}